/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Hospital_MS;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Prakhar
 */
public class Diagnosis extends javax.swing.JFrame {

    /**
     * Creates new form Diagnosis
     */
    public Diagnosis() {
        initComponents();
        selectional();
    }
    
    Connection con = null; 
    Statement st = null;
    ResultSet rs = null;
    
    private void connection(){
        try {
            //derbyclient.jar use to connect with the JDBC Java derby database and for table customization rsxml.jar is used 
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/HospitalDB","root","121");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void selectional(){
        try {
            connection();
            st = con.createStatement();
            rs = st.executeQuery("select * from DIAGNOSISDB");
            diagnosisTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        diagId = new javax.swing.JTextField();
        jPIDLabel = new javax.swing.JLabel();
        jPNameLabel = new javax.swing.JLabel();
        patId = new javax.swing.JTextField();
        jPAddressLabel = new javax.swing.JLabel();
        patName = new javax.swing.JTextField();
        jPAgeLabel = new javax.swing.JLabel();
        jPGenderLabel = new javax.swing.JLabel();
        jPPhoneLabel = new javax.swing.JLabel();
        symptoms = new javax.swing.JTextField();
        medicines = new javax.swing.JTextField();
        diagAdd = new javax.swing.JButton();
        diagUpdate = new javax.swing.JButton();
        diagDelete = new javax.swing.JButton();
        diagClear = new javax.swing.JButton();
        diagnosis = new javax.swing.JTextField();
        printDiag = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        patSummary = new javax.swing.JTextPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        diagnosisTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPHomeButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hospital Management System");
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DIAGNOSIS INFORMATION");
        jLabel2.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));

        diagId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jPIDLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPIDLabel.setText("ID:");

        jPNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPNameLabel.setText("Patient ID:");

        patId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        patId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patIdActionPerformed(evt);
            }
        });
        patId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patIdKeyPressed(evt);
            }
        });

        jPAddressLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPAddressLabel.setText("Name:");

        patName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jPAgeLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPAgeLabel.setText("Medicines:");

        jPGenderLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPGenderLabel.setText("Diagnosis:");

        jPPhoneLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPPhoneLabel.setText("Symtoms:");

        symptoms.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        medicines.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        diagAdd.setBackground(new java.awt.Color(0, 0, 0));
        diagAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        diagAdd.setForeground(new java.awt.Color(255, 255, 255));
        diagAdd.setText("ADD");
        diagAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        diagAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                diagAddMouseClicked(evt);
            }
        });

        diagUpdate.setBackground(new java.awt.Color(0, 0, 0));
        diagUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        diagUpdate.setForeground(new java.awt.Color(255, 255, 255));
        diagUpdate.setText("UPDATE");
        diagUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        diagUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                diagUpdateMouseClicked(evt);
            }
        });

        diagDelete.setBackground(new java.awt.Color(0, 0, 0));
        diagDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        diagDelete.setForeground(new java.awt.Color(255, 255, 255));
        diagDelete.setText("DELETE");
        diagDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        diagDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                diagDeleteMouseClicked(evt);
            }
        });

        diagClear.setBackground(new java.awt.Color(0, 0, 0));
        diagClear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        diagClear.setForeground(new java.awt.Color(255, 255, 255));
        diagClear.setText("CLEAR");
        diagClear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        diagClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                diagClearMouseClicked(evt);
            }
        });

        diagnosis.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        printDiag.setBackground(new java.awt.Color(0, 0, 0));
        printDiag.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        printDiag.setForeground(new java.awt.Color(255, 255, 255));
        printDiag.setText("PRINT");
        printDiag.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        printDiag.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printDiagMouseClicked(evt);
            }
        });

        patSummary.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        patSummary.setText("          ----------Patient's Summary----------");
        jScrollPane2.setViewportView(patSummary);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(diagAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(diagUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(diagDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(diagClear, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPAddressLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(diagId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPPhoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPAgeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(jPGenderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(medicines)
                            .addComponent(symptoms)
                            .addComponent(diagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(printDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(25, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPIDLabel)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(diagId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPPhoneLabel)
                                .addComponent(symptoms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPNameLabel)
                            .addComponent(patId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPGenderLabel)
                            .addComponent(diagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPAddressLabel)
                            .addComponent(patName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPAgeLabel)
                            .addComponent(medicines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(diagAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diagUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diagDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diagClear, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DIAGNOSIS LIST");
        jLabel3.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        diagnosisTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        diagnosisTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Diagnosis ID", "Patient ID", "Patient Name", "Symptoms", "Diagnosis", "Medicines"
            }
        ));
        diagnosisTable.setRowHeight(25);
        diagnosisTable.setSelectionBackground(new java.awt.Color(0, 153, 153));
        diagnosisTable.setSelectionForeground(new java.awt.Color(0, 204, 255));
        diagnosisTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                diagnosisTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(diagnosisTable);

        jPanel7.setBackground(new java.awt.Color(0, 102, 102));

        jPHomeButton1.setBackground(new java.awt.Color(0, 0, 0));
        jPHomeButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPHomeButton1.setForeground(new java.awt.Color(255, 255, 255));
        jPHomeButton1.setText("HOME");
        jPHomeButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPHomeButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPHomeButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPHomeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPHomeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void patIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patIdActionPerformed

    private void patIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patIdKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            try {
                String PId = patId.getText();
                connection();
                PreparedStatement pst = con.prepareStatement("Select * from PATIENTDB where PATID = ?");
                pst.setString(1, PId);
                rs = pst.executeQuery();
                if(rs.next() == false){
                    patName.setText("");
                    patId.setText("");
                    patId.requestFocus();
                    JOptionPane.showMessageDialog(this, "PATIENT ID not found");
                }
                else{
                    patId.setEditable(false);
                    String PName = rs.getString("PATNAME");
                    patName.setText(PName);
                    patName.setEditable(false);
                    symptoms.requestFocus();
                }
            } catch (SQLException ex) {
                Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_patIdKeyPressed

    private void diagAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diagAddMouseClicked
        // TODO add your handling code here:
        if(patId.getText().isEmpty() || patName.getText().isEmpty() || symptoms.getText().isEmpty() || diagnosis.getText().isEmpty() || diagId.getText().isEmpty() || medicines.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please fill all the details");
        }
        else{
            try {
            //DriverManager.registerDriver(new org.apache.derby.jdbc.EmbeddedDriver()); // not usable
            connection();
            PreparedStatement add = con.prepareStatement("insert into DIAGNOSISDB values(?,?,?,?,?,?)");
            add.setInt(1, Integer.parseInt(diagId.getText()));
            add.setInt(2,Integer.parseInt(patId.getText()));
            add.setString(3, patName.getText());
            add.setString(4, symptoms.getText());
            add.setString(5, diagnosis.getText());
            add.setString(6, medicines.getText());
            
            int row = add.executeUpdate();
            selectional();
            patId.setText("");
            patId.setEditable(true);
            patName.setText("");
            patName.setEditable(true);
            diagnosis.setText("");
            symptoms.setText("");
            diagId.setText("");
            medicines.setText("");
            diagId.requestFocus();
            JOptionPane.showMessageDialog(this, "Diagnosis Added Successfully");
            con.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Diagnosis ID Already Exist!");
            ex.printStackTrace();
        }
      }
    }//GEN-LAST:event_diagAddMouseClicked

    private void diagClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diagClearMouseClicked
        // TODO add your handling code here:
            patId.setText("");
            patName.setText("");
            diagnosis.setText("");
            symptoms.setText("");
            diagId.setText("");
            medicines.setText("");
            diagId.requestFocus();
            patSummary.setText("          ----------Patient's Summary----------");
            diagId.setEditable(true);
            patId.setEditable(true);
            patName.setEditable(true);
    }//GEN-LAST:event_diagClearMouseClicked

    private void printDiagMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printDiagMouseClicked
        // TODO add your handling code here:
        try {
            patSummary.print();
            diagId.setEditable(true);
            patId.setEditable(true);
            patName.setEditable(true);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_printDiagMouseClicked

    private void diagnosisTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diagnosisTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)diagnosisTable.getModel();
        int index = diagnosisTable.getSelectedRow();
        patSummary.setText("          ----------Patient's Summary----------");//Remove this line if you want to print multiple summary in one Page
        diagId.setText(model.getValueAt(index, 0).toString());
        diagId.setEditable(false);
        patId.setText(model.getValueAt(index, 1).toString());
        patId.setEditable(false);
        String pName = model.getValueAt(index, 2).toString();
        patName.setText(pName);
        patName.setEditable(false);
        String sympt = model.getValueAt(index, 3).toString();
        symptoms.setText(sympt);
        String diag = model.getValueAt(index, 4).toString();
        diagnosis.setText(diag);
        String med = model.getValueAt(index, 5).toString();
        medicines.setText(med);
        patSummary.setText(patSummary.getText()+"\n\n"+"        Patient Name: "+pName+"\n"+"        Symptoms: "+sympt+"\n"+"        Diagnosis: "+diag+"\n"+"        Medicines: "+med);
    }//GEN-LAST:event_diagnosisTableMouseClicked

    private void diagUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diagUpdateMouseClicked
        // TODO add your handling code here:
        if(patId.getText().isEmpty() || patName.getText().isEmpty() || diagId.getText().isEmpty() || symptoms.getText().isEmpty() || diagnosis.getText().isEmpty() || medicines.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "Please fill all the details");
        else{
            connection();
            try {
                String query = "update DIAGNOSISDB set SYMPTOMS='"+symptoms.getText().toString()+"'"+", DIAGNOSIS='"+diagnosis.getText().toString()+"', MEDICINES='"+medicines.getText().toString()+"'"+" where DIAGID="+diagId.getText();
                PreparedStatement ps = con.prepareStatement(query);
                ps.executeUpdate();
                    selectional();
                    diagId.setText("");
                    patId.setText("");
                    patName.setText("");
                    symptoms.setText("");
                    diagnosis.setText("");
                    medicines.setText("");
                    diagId.setEditable(true);
                    patId.setEditable(true);
                    patName.setEditable(true);
                    diagId.requestFocus();
                    patSummary.setText("          ----------Patient's Summary----------");
                    JOptionPane.showMessageDialog(this, "Update Successfull!");
                    con.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_diagUpdateMouseClicked

    private void diagDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diagDeleteMouseClicked
        // TODO add your handling code here:
        if(patId.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please select a valid PATIENT ID to delete!");
        }
        else{
            try {
                connection();
                String id = patId.getText();
                String query = "delete from DIAGNOSISDB where PATID="+id;
                PreparedStatement ps = con.prepareStatement(query);
                int row = ps.executeUpdate();
                if(row == 0){
                    JOptionPane.showMessageDialog(this, "PATIENT ID does not exist!");
                    patId.setText("");
                    patName.setText("");
                    diagId.setText("");
                    diagId.setEditable(true);
                    patId.setEditable(true);
                    patName.setEditable(true);
                }
                else{
                selectional();
                diagId.setText("");
                patId.setText("");
                patName.setText("");
                symptoms.setText("");
                diagnosis.setText("");
                medicines.setText("");
                diagId.setEditable(true);
                patId.setEditable(true);
                patName.setEditable(true);
                diagId.requestFocus();
                patSummary.setText("          ----------Patient's Summary----------");
                JOptionPane.showMessageDialog(this, "Diagnosis Successfully Deleted!");
                con.close();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_diagDeleteMouseClicked

    private void jPHomeButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPHomeButton1MouseClicked
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this, "Do you want to continue!", "Confirm?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(response == JOptionPane.YES_OPTION){
            new HospitalForm().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jPHomeButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Diagnosis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton diagAdd;
    private javax.swing.JButton diagClear;
    private javax.swing.JButton diagDelete;
    private javax.swing.JTextField diagId;
    private javax.swing.JButton diagUpdate;
    private javax.swing.JTextField diagnosis;
    private javax.swing.JTable diagnosisTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jPAddressLabel;
    private javax.swing.JLabel jPAgeLabel;
    private javax.swing.JLabel jPGenderLabel;
    private javax.swing.JButton jPHomeButton1;
    private javax.swing.JLabel jPIDLabel;
    private javax.swing.JLabel jPNameLabel;
    private javax.swing.JLabel jPPhoneLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField medicines;
    private javax.swing.JTextField patId;
    private javax.swing.JTextField patName;
    private javax.swing.JTextPane patSummary;
    private javax.swing.JButton printDiag;
    private javax.swing.JTextField symptoms;
    // End of variables declaration//GEN-END:variables
}
