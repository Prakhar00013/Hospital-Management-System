/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Hospital_MS;

import java.awt.event.KeyEvent;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Prakhar
 */
public class Patient extends javax.swing.JFrame {

    /**
     * Creates new form Patient
     */
    public Patient() {
        initComponents();
        selectional();
    }
    
    Connection con = null; 
    Statement st = null;
    ResultSet rs = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPIDLabel = new javax.swing.JLabel();
        jPNameLabel = new javax.swing.JLabel();
        jPPhoneLabel = new javax.swing.JLabel();
        jPGenderLabel = new javax.swing.JLabel();
        patPhone = new javax.swing.JTextField();
        patId = new javax.swing.JTextField();
        patName = new javax.swing.JTextField();
        jPatientInfoLabel = new javax.swing.JLabel();
        patAddress = new javax.swing.JTextField();
        jPAddressLabel = new javax.swing.JLabel();
        jPAgeLabel = new javax.swing.JLabel();
        patAge = new javax.swing.JTextField();
        patGen = new javax.swing.JComboBox<>();
        jPPathologiesLabel = new javax.swing.JLabel();
        pathologies = new javax.swing.JTextField();
        jPBloodGroupLabel = new javax.swing.JLabel();
        patBldGrp = new javax.swing.JComboBox<>();
        patAdd = new javax.swing.JButton();
        patUpdate = new javax.swing.JButton();
        patDelete = new javax.swing.JButton();
        patClear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPatientsListLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPHomeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        patTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hospital Management System");
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Manage Patients");
        jLabel2.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jPIDLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPIDLabel.setText("ID:");

        jPNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPNameLabel.setText("Name:");

        jPPhoneLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPPhoneLabel.setText("Phone:");

        jPGenderLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPGenderLabel.setText("Gender:");

        patPhone.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        patId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        patId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patIdKeyPressed(evt);
            }
        });

        patName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jPatientInfoLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPatientInfoLabel.setText("PATIENT INFORMATION");

        patAddress.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jPAddressLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPAddressLabel.setText("Address:");

        jPAgeLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPAgeLabel.setText("Age:");

        patAge.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        patGen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "Male", "Female", "Prefer not to say" }));

        jPPathologiesLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPPathologiesLabel.setText("Pathologies:");

        pathologies.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jPBloodGroupLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPBloodGroupLabel.setText("Blood Group:");

        patBldGrp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));

        patAdd.setBackground(new java.awt.Color(0, 0, 0));
        patAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        patAdd.setForeground(new java.awt.Color(255, 255, 255));
        patAdd.setText("ADD");
        patAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        patAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patAddMouseClicked(evt);
            }
        });

        patUpdate.setBackground(new java.awt.Color(0, 0, 0));
        patUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        patUpdate.setForeground(new java.awt.Color(255, 255, 255));
        patUpdate.setText("UPDATE");
        patUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        patUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patUpdateMouseClicked(evt);
            }
        });

        patDelete.setBackground(new java.awt.Color(0, 0, 0));
        patDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        patDelete.setForeground(new java.awt.Color(255, 255, 255));
        patDelete.setText("DELETE");
        patDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        patDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patDeleteMouseClicked(evt);
            }
        });

        patClear.setBackground(new java.awt.Color(0, 0, 0));
        patClear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        patClear.setForeground(new java.awt.Color(255, 255, 255));
        patClear.setText("CLEAR");
        patClear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        patClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patClearMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPatientInfoLabel)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPAddressLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(patName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(patId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(patAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(66, 66, 66)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPAgeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPGenderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(patAge)
                                    .addComponent(patPhone)
                                    .addComponent(patGen, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPPathologiesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pathologies, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPBloodGroupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(patBldGrp, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(patAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(patUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(patDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(patClear, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(155, 155, 155)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPatientInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPIDLabel)
                            .addComponent(patId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPNameLabel)
                            .addComponent(patName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPGenderLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPAddressLabel)
                            .addComponent(patAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPAgeLabel)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(patPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(patGen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPPathologiesLabel)
                            .addComponent(pathologies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPBloodGroupLabel)
                            .addComponent(patBldGrp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPPhoneLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(patClear, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(patDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(patUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jPatientsListLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jPatientsListLabel.setForeground(new java.awt.Color(255, 255, 255));
        jPatientsListLabel.setText("PATIENTS LIST");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPatientsListLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPatientsListLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));

        jPHomeButton.setBackground(new java.awt.Color(0, 0, 0));
        jPHomeButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPHomeButton.setForeground(new java.awt.Color(255, 255, 255));
        jPHomeButton.setText("HOME");
        jPHomeButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPHomeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPHomeButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        patTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        patTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient ID", "Patient Name", "Address", "Phone", "Age", "Gender", "Blood Group", "Pathologies"
            }
        ));
        patTable.setRowHeight(25);
        patTable.setSelectionBackground(new java.awt.Color(0, 153, 153));
        patTable.setSelectionForeground(new java.awt.Color(0, 204, 255));
        patTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(patTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void connection(){
        try {
            //derbyclient.jar use to connect with the JDBC Java derby database and for table customization rsxml.jar is used 
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/HospitalDB","root","121");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void selectional(){
        try {
            connection();
            st = con.createStatement();
            rs = st.executeQuery("select * from PATIENTDB");
            patTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void patAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patAddMouseClicked
        if(patId.getText().isEmpty() || patName.getText().isEmpty() || patAdd.getText().isEmpty() || patPhone.getText().isEmpty() || patAge.getText().isEmpty() || patGen.getSelectedItem().toString().equals("---") || patBldGrp.getSelectedItem().toString().equals("---") || pathologies.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please fill all the details");
        }
        else{
            try {
            //DriverManager.registerDriver(new org.apache.derby.jdbc.EmbeddedDriver()); // not usable
            connection();
            PreparedStatement add = con.prepareStatement("insert into PATIENTDB values(?,?,?,?,?,?,?,?)");
            add.setInt(1, Integer.parseInt(patId.getText()));
            add.setString(2, patName.getText());
            add.setString(3,patAddress.getText());
//            add.setInt(4,Integer.parseInt(patPhone.getText()));
            add.setString(4, patPhone.getText());
            add.setInt(5, Integer.parseInt(patAge.getText()));
            add.setString(6, (String) patGen.getSelectedItem());
            add.setString(7, (String) patBldGrp.getSelectedItem());
            add.setString(8, pathologies.getText());
            int row = add.executeUpdate();
            selectional();
            patId.setText("");
            patName.setText("");
            patAddress.setText("");
            patAge.setText("");
            patPhone.setText("");
            pathologies.setText("");
            patGen.setSelectedIndex(0);
            patBldGrp.setSelectedIndex(0);
            patId.requestFocus();
            JOptionPane.showMessageDialog(this, "Patient Added Successfully");
            con.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Patient ID Already Exist!");
            ex.printStackTrace();
        }
      }
    }//GEN-LAST:event_patAddMouseClicked

    private void patUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patUpdateMouseClicked
        if(patId.getText().isEmpty() || patName.getText().isEmpty() || patAdd.getText().isEmpty() || patPhone.getText().isEmpty() || patAge.getText().isEmpty() || patGen.getSelectedItem().toString().equals("---") || patBldGrp.getSelectedItem().toString().equals("---") || pathologies.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please fill all the details");
        }
        else{
            connection();
            try {
                String query = "update PATIENTDB set PATNAME='"+patName.getText().toString()+"'"+", PATADDRS='"+patAddress.getText().toString()+"', PATPHONE='"+patPhone.getText().toString()+"'"+", PATAGE="+patAge.getText()+", PATGEN='"+patGen.getSelectedItem().toString()+"', PATBLDGRP='"+patBldGrp.getSelectedItem().toString()+"', PATHOLOGIES='"+pathologies.getText().toString()+"'"+" where PATID="+patId.getText();
                PreparedStatement ps = con.prepareStatement(query);
                ps.executeUpdate();
                selectional();
                patId.setText("");
                patName.setText("");
                patAddress.setText("");
                patAge.setText("");
                patPhone.setText("");
                pathologies.setText("");
                patGen.setSelectedIndex(0);
                patBldGrp.setSelectedIndex(0);
                patId.requestFocus();
                JOptionPane.showMessageDialog(this, "Update Successfull!");
                con.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_patUpdateMouseClicked

    private void patDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patDeleteMouseClicked

        if(patId.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please select a valid ID to delete!");
        }
        else{
            try {
                connection();
                String id = patId.getText();
                String query = "delete from PATIENTDB where PATID="+id;
                PreparedStatement ps = con.prepareStatement(query);
                ps.executeUpdate();
                selectional();
                patId.setText("");
                patName.setText("");
                patAddress.setText("");
                patAge.setText("");
                patPhone.setText("");
                pathologies.setText("");
                patGen.setSelectedIndex(0);
                patBldGrp.setSelectedIndex(0);
                patId.requestFocus();
                JOptionPane.showMessageDialog(this, "Patient Successfully Deleted!");
                con.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_patDeleteMouseClicked

    private void patClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patClearMouseClicked

        patId.setText("");
        patId.setEditable(true);
        patName.setText("");
        patAddress.setText("");
        patAge.setText("");
        patPhone.setText("");
        pathologies.setText("");
        patGen.setSelectedIndex(0);
        patBldGrp.setSelectedIndex(0);
        patId.requestFocus();
    }//GEN-LAST:event_patClearMouseClicked

    private void patTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patTableMouseClicked

        DefaultTableModel model = (DefaultTableModel)patTable.getModel();
        int index = patTable.getSelectedRow();
        patId.setText(model.getValueAt(index, 0).toString());
        patId.setEditable(false);
        patName.setText(model.getValueAt(index, 1).toString());
        patAddress.setText(model.getValueAt(index, 2).toString());
        patPhone.setText(model.getValueAt(index, 3).toString());
        patAge.setText(model.getValueAt(index, 4).toString());
        patGen.setSelectedItem(model.getValueAt(index, 5).toString());
        patBldGrp.setSelectedItem(model.getValueAt(index, 6).toString());
        pathologies.setText(model.getValueAt(index, 7).toString());
    }//GEN-LAST:event_patTableMouseClicked

    private void patIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patIdKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            try {
                String PId = patId.getText();
                connection();
                PreparedStatement pst = con.prepareStatement("Select * from PATIENTDB where PATID = ?");
                pst.setString(1, PId);
                rs = pst.executeQuery();
                if(rs.next() == false){
                    patId.setText("");
                    patId.requestFocus();
                    JOptionPane.showMessageDialog(this, "PATIENT ID not found");
                }
                else{
                    patId.setEditable(false);
                    String PName = rs.getString("PATNAME");
                    patName.setText(PName);
                    String PAddrs = rs.getString("PATADDRS");
                    patAddress.setText(PAddrs);
                    String PPhone = rs.getString("PATPHONE");
                    patPhone.setText(PPhone);
                    String PAge = rs.getString("PATAGE");
                    patAge.setText(PAge);
                    String PGen = rs.getString("PATGEN");
                    patGen.setSelectedItem(PGen);
                    String PL = rs.getString("PATHOLOGIES");
                    pathologies.setText(PL);
                    String PBldGrp = rs.getString("PATBLDGRP");
                    patBldGrp.setSelectedItem(PBldGrp);
                    patName.requestFocus();
                }
            } catch (SQLException ex) {
                Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_patIdKeyPressed

    private void jPHomeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPHomeButtonMouseClicked
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this, "Do you want to continue!", "Confirm?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(response == JOptionPane.YES_OPTION){
            new HospitalForm().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jPHomeButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Patient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jPAddressLabel;
    private javax.swing.JLabel jPAgeLabel;
    private javax.swing.JLabel jPBloodGroupLabel;
    private javax.swing.JLabel jPGenderLabel;
    private javax.swing.JButton jPHomeButton;
    private javax.swing.JLabel jPIDLabel;
    private javax.swing.JLabel jPNameLabel;
    private javax.swing.JLabel jPPathologiesLabel;
    private javax.swing.JLabel jPPhoneLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel jPatientInfoLabel;
    private javax.swing.JLabel jPatientsListLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton patAdd;
    private javax.swing.JTextField patAddress;
    private javax.swing.JTextField patAge;
    private javax.swing.JComboBox<String> patBldGrp;
    private javax.swing.JButton patClear;
    private javax.swing.JButton patDelete;
    private javax.swing.JComboBox<String> patGen;
    private javax.swing.JTextField patId;
    private javax.swing.JTextField patName;
    private javax.swing.JTextField patPhone;
    private javax.swing.JTable patTable;
    private javax.swing.JButton patUpdate;
    private javax.swing.JTextField pathologies;
    // End of variables declaration//GEN-END:variables
}
